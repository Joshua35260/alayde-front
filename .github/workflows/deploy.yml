name: Deploy Frontend to VPS

on:
  push:
    branches:
      - main  # ou master selon votre workflow

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install frontend dependencies
        run: |
          echo "Installing frontend dependencies..."
          npm install

      - name: Build the frontend project
        run: |
          echo "Building the frontend project..."
          npm run build --prod  # Change si nécessaire

      - name: Build Docker image for frontend
        run: |
          echo "Building Docker image for frontend..."
          docker build -t djosh35/tickly-frontend:${{ github.sha }} -f ./.github/workflows/Dockerfile .

      - name: Log in to Docker Hub
        run: |
          echo "Logging in to Docker Hub..."
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image to Docker Hub
        run: |
          echo "Tagging and pushing Docker image..."
          docker tag djosh35/tickly-frontend:${{ github.sha }} djosh35/tickly-frontend:latest
          docker push djosh35/tickly-frontend:${{ github.sha }}
          docker push djosh35/tickly-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-frontend  # Déploiement après construction du frontend

    steps:
      # Installer sshpass pour permettre l'utilisation de mots de passe avec SSH
      - name: Install sshpass
        run: |
          echo "Installing sshpass..."
          sudo apt-get install -y sshpass

      - name: Deploy to VPS
        run: |
          echo "Connecting to VPS to deploy the frontend..."
          sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_IP }} << 'EOF'
            echo "Pulling the latest image for frontend..."
            docker pull djosh35/tickly-frontend:latest
            
            echo "Stopping and removing existing container if it exists..."
            docker stop tickly-frontend || true
            docker rm tickly-frontend || true

            echo "Starting the frontend container..."
            docker run -d --name tickly-frontend -p 80:80 djosh35/tickly-frontend:latest
            echo "Frontend deployed successfully!"
          EOF
